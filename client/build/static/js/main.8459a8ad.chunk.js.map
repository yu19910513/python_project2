{"version":3,"sources":["utils/actions/index.js","utils/reducers/reducers.js","utils/GlobalState.js","components/Jumbotron/index.js","pages/Home/Home.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login/Login.js","pages/Signup/Signup.js","components/Nav/index.js","utils/queries.js","utils/helper.js","pages/UserDashboard/UserDashboard.js","utils/reducers/index.js","utils/store.js","components/ContributionItem/index.js","assets/spinner.gif","components/ContributionList/index.js","components/CartItem/index.js","components/Cart/index.js","pages/ContributionPage/ContributionPage.js","pages/Detail/Detail.js","pages/Success/Success.js","pages/OrderHistory/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_CONTRIBUTIONS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","contributions","cartOpen","cart","contribution","map","_id","purchaseQuantity","newState","filter","length","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","Jumbotron","children","style","height","clear","paddingTop","textAlign","Home","className","NoMatch","role","LOGIN","gql","ADD_USER","ADD_ORDER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","Container","fluid","Card","position","to","onSubmit","htmlFor","placeholder","id","onChange","Signup","username","addUser","Nav","backgroundColor","loggedIn","href","onClick","logout","QUERY_USER","QUERY_USERS","QUERY_ALL_CONTRIBUTIONS","QUERY_CHECKOUT","pluralize","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","UserDashboard","useQuery","loading","useEffect","Spinner","animation","width","margin","display","allReducer","combineReducers","stripe","stripeReducer","createStore","ContributionItem","item","image","price","quantity","alt","src","itemInCart","find","cartItem","parseInt","ContributionList","JSON","stringify","forEach","then","spinner","CartItem","removeFromCart","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","products","getCart","sum","toFixed","calculateTotal","contributionIds","i","push","ContributionPage","Detail","useParams","currentContribution","setCurrentContribution","indexedContributions","description","disabled","p","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","UserProfile","ContentPage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8459a8ad.chunk.js","sourcesContent":["export const UPDATE_CONTRIBUTIONS = \"UPDATE_CONTRIBUTIONS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";","import { useReducer } from 'react';\nimport {\n  UPDATE_CONTRIBUTIONS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"../actions\";\n\nexport const reducer = (state = {}, action = { type: null }) => {\n  switch (action.type) {\n    case UPDATE_CONTRIBUTIONS:\n      return {\n        ...state,\n        contributions: [...action.contributions],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.contribution],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.contributions],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(contribution => {\n          if (action._id === contribution._id) {\n            contribution.purchaseQuantity = action.purchaseQuantity\n          }\n          return contribution;\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(contribution => {\n        return contribution._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers/reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    contributions: [],\n    cart: [],\n    cartOpen: false,\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <Jumbotron>\n        <h1>Starter Stack</h1>\n        <p>We are here to be awesome</p>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from \"@apollo/client\";\n\n//login\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n//signup\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n// add photo of user\nexport const UPLOAD_PHOTO = gql`\n  mutation uploadPhoto($file: Upload!) {\n    uploadPhoto(file: $file) {\n      _id\n      username\n      email\n      imgUrl\n      aboutme\n      contactme\n      tech {\n        _id\n        name\n      }\n      resource {\n        _id\n        title\n        videoUrl\n        shortdescription\n      }\n    }\n  }\n`;\n\n//add video\n// export const UPLOAD_VIDEO = gql`\n//   mutation uploadVideo($file: Upload!) {\n//     uploadVideo(file: $file) {\n//       _id\n//       username\n//       email\n//       username\n//       imgUrl\n//       aboutme\n//       contactme\n//       tech {\n//         _id\n//         name\n//       }\n//       resource {\n//         _id\n//         title\n//         videoUrl\n//         shortdescription\n//       }\n//     }\n//   }\n// `;\n\n// update technology\nexport const UPDATE_TECH = gql`\n  mutation updateUserTech($tech: [ID]!) {\n    updateUserTech(tech: $tech) {\n      _id\n      username\n      email\n      aboutme\n      contactme\n      tech {\n        _id\n        name\n      }\n    }\n  }\n`;\n\n// update  aboutme\nexport const UPDATE_USER_ABOUT_ME = gql`\n  mutation updateUserAboutMe($aboutme: String!) {\n    updateUserAboutMe(aboutme: $aboutme) {\n      _id\n      username\n      email\n      imgUrl\n      aboutme\n      contactme\n      tech {\n        _id\n        name\n      }\n      resource {\n        _id\n        title\n        videoUrl\n        shortdescription\n      }\n    }\n  }\n`;\n\n//update  contact info of user creating the resource\nexport const UPDATE_USER_CONTACT = gql`\n  mutation updateUserContact($contactInfo: String!) {\n    updateUserContact(contactInfo: $contactInfo) {\n      _id\n      username\n      email\n      imgUrl\n      aboutme\n      contactme\n      tech {\n        _id\n        name\n      }\n      resource {\n        _id\n        title\n        videoUrl\n        shortdescription\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER_RESOURCE = gql`\n  mutation updateUserResource(\n    $file: Upload!\n    $title: String!\n    $shortdescription: String!\n  ) {\n    updateUserResource(\n      file: $file\n      title: $title\n      shortdescription: $shortdescription\n    ) {\n      _id\n      username\n      email\n      imgUrl\n      aboutme\n      contactme\n      tech {\n        _id\n        name\n      }\n      resource {\n        _id\n        title\n        videoUrl\n        shortdescription\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($contributions: [ID]!) {\n    addOrder(contributions: $contributions) {\n      purchaseDate\n      contributions {\n        _id\n        name\n        description\n        image\n        price\n        quantity\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport { Container, Card } from \"react-bootstrap\";\nimport './Login.css';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container fluid>\n      <Card>\n        <div\n          style={{\n          position: 'fixed'\n          }}\n        >\n        <Link to=\"/signup\">← Go to Signup</Link>\n\n          <h2>Login</h2>\n          <form onSubmit={handleFormSubmit}>\n    \n            <label htmlFor=\"email\">\n              Email\n              <br />\n            <input\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n            </label>\n            <br />\n            <label htmlFor=\"pwd\">\n              Password\n              <br />\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n            </label>\n            \n            {error ? (\n              <div>\n                <p className=\"error-text\">The provided credentials are incorrect</p>\n              </div>\n            ) : null}\n            <div className=\"flex-row flex-end\">\n              <br />\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport { ADD_USER } from \"../../utils/mutations\";\nimport { Container, Card } from \"react-bootstrap\";\nimport './Signup.css';\n\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ username: \"\", email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        username: formState.username,\n        email: formState.email,\n        password: formState.password,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container fluid>\n      <Card>\n        <div\n          style={{\n            position: 'fixed'\n          }}\n        >\n        <Link to=\"/login\">← Go to Login</Link>\n\n          <h2>Signup</h2>\n          <form onSubmit={handleFormSubmit}>\n            <label htmlFor=\"username\">\n              Username\n              <br />\n            <input\n              placeholder=\"Username\"\n              name=\"username\"\n              type=\"text\"\n              id=\"username\"\n              onChange={handleChange}\n            />\n            </label>\n            <br />\n            <label htmlFor=\"email\">\n              Email\n              <br />\n            <input\n              placeholder=\"youremail@email.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n            </label>\n            <br />\n            <label htmlFor=\"pwd\">\n              Password\n              <br />\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n            </label>\n            <br />\n            <br />\n            <div className=\"flex-row flex-end\">\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contributionPage\">Contribute</Link>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contributionPage\">Contribute</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\" style={{ backgroundColor: \"#415d43\" }}>\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\"></span>\n          Starter Stack\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      username\n      orders {\n        _id\n        purchaseDate\n        contributions {\n          _id\n          name\n          description\n          image\n          price\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_USERS = gql`\n  {\n    user {\n      _id\n      email\n      username\n      imgUrl\n      aboutme\n      contactme\n      tech {\n        _id\n        name\n      }\n      resource {\n        _id\n        title\n        videoUrl\n        shortdescription\n      }\n    }\n  }\n`;\n\nexport const QUERY_TECHS = gql`\n  {\n    tech {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_RESOURCE = gql`\n  query resource($_id: ID!) {\n    resource(_id: $_id) {\n      _id\n      title\n      shortdescription\n      videoUrl\n    }\n  }\n`;\n\nexport const QUERY_ALL_CONTRIBUTIONS = gql`\n  query {\n    contributions {\n      _id\n      name\n      description\n      image\n      price\n      quantity\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($contributions: [ID]!) {\n    checkout(contributions: $contributions) {\n      session\n    }\n  }\n`;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"full-stack-web-dev-community\", 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"contributions\", { keyPath: \"_id\" });\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_USERS } from \"../../utils/queries\";\nimport { UPDATE_USER } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helper\";\nimport { Row, Col, Spinner } from \"react-bootstrap\";\nimport \"./UserDashboard.css\";\n\nconst UserDashboard = () => {\n  const { loading, data } = useQuery(QUERY_USERS);\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner\n          animation=\"border\"\n          role=\"status\"\n          style={{\n            width: \"2rem\",\n            height: \"2rem\",\n            margin: \"auto\",\n            display: \"block\",\n          }}\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : null}\n    </>\n  );\n};\n\nexport default UserDashboard;\n","import { combineReducers } from \"redux\";\n// import userReducer from \"./userReducer\";\n// import techReducer from \"./techReducer\";\nimport { reducer as stripeReducer } from \"./reducers\";\n\nconst allReducer = combineReducers({\n  // users: userReducer,\n  // techs: techReducer,\n  stripe: stripeReducer,\n});\n\nexport default allReducer;\n","import { createStore } from \"redux\";\n\nimport allReducer from \"./reducers\";\n\nconst store = createStore(allReducer);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize, idbPromise } from \"../../utils/helper\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\n\nfunction ContributionItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        contribution: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/contributions/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} available</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ContributionItem;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ContributionItem from '../ContributionItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CONTRIBUTIONS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ALL_CONTRIBUTIONS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helper';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ContributionList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { loading, data } = useQuery(QUERY_ALL_CONTRIBUTIONS);\n  console.log('data:\\n', JSON.stringify(data, null, 2));\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_CONTRIBUTIONS,\n        contributions: data.contributions,\n      });\n      data.contributions.forEach((contribution) => {\n        idbPromise('contributions', 'put', contribution);\n      });\n    } else if (!loading) {\n      idbPromise('contributions', 'get').then((contributions) => {\n        dispatch({\n          type: UPDATE_CONTRIBUTIONS,\n          contributions,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  return (\n    <div className=\"my-2\">\n      <h2>Choose a dollar amount contribution:</h2>\n      {state.contributions.length ? (\n        <div className=\"flex-row\">\n          {data.contributions.map(contribution => (\n            <ContributionItem\n              key={contribution._id}\n              _id={contribution._id}\n              image={contribution.image}\n              name={contribution.name}\n              price={contribution.price}\n              quantity={contribution.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't picked a contribution amount!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ContributionList;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helper\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helper';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_51JRSIkDCPVMgZ8j7LQXvGtgzf95mU0xYqBOij8hGCmsqUW97YIKnIcsn5iPCSswvapFxsXA9F7IVJw73CFoQIuV000ZgsxrTkm');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, contributions: [...cart], products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const contributionIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        contributionIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { contributions: contributionIds, products: contributionIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ContributionList from \"../../components/ContributionList\";\nimport Cart from \"../../components/Cart\";\n\nconst ContributionPage = () => {\n  return (\n    <div className=\"container\">\n      <ContributionList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default ContributionPage;","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../../components/Cart';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_CONTRIBUTIONS,\n} from '../../utils/actions/index';\nimport { QUERY_ALL_CONTRIBUTIONS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helper';\nimport spinner from '../../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentContribution, setCurrentContribution] = useState({});\n\n  const { loading, data } = useQuery(QUERY_ALL_CONTRIBUTIONS);\n\n  const { contributions, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (contributions.length) {\n      setCurrentContribution(contributions.find((contribution) => contribution._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_CONTRIBUTIONS,\n        contributions: data.contributions,\n      });\n\n      data.contributions.forEach((contribution) => {\n        idbPromise('contributions', 'put', contribution);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('contributions', 'get').then((indexedContributions) => {\n        dispatch({\n          type: UPDATE_CONTRIBUTIONS,\n          products: indexedContributions,\n        });\n      });\n    }\n  }, [contributions, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        contribution: { ...currentContribution, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentContribution, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentContribution._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentContribution });\n  };\n\n  return (\n    <>\n      {currentContribution && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/contributionPage\">← Back to Contributions</Link>\n\n          <h2>{currentContribution.name}</h2>\n\n          <p>{currentContribution.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentContribution.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentContribution._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`../images/${currentContribution.image}`}\n            alt={currentContribution.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../../components/Jumbotron';\nimport { ADD_ORDER } from '../../utils/mutations';\nimport { idbPromise } from '../../utils/helper';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const contributions = cart.map((item) => item._id);\n\n      if (contributions.length) {\n        const { data } = await addOrder({ variables: { contributions } });\n        const contributionData = data.addOrder.contributions;\n\n        contributionData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your donation!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/contributionPage\">← Back to Contributions</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.username}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.contributions.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`../contributions/${_id}`}>\n                        <img alt={name} src={`../images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\n// import { Provider } from \"react-redux\";\nimport { StoreProvider } from './utils/GlobalState';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home/Home.js\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login/Login.js\";\nimport Signup from \"./pages/Signup/Signup\";\nimport Nav from \"./components/Nav\";\nimport UserDashboard from \"./pages/UserDashboard/UserDashboard.js\";\nimport UserProfile from \"./pages/UserProfile/UserProfile.js\";\nimport ContentPage from \"./pages/ContentPage/ContentPage.js\";\nimport store from \"./utils/store\";\nimport ContributionPage from \"./pages/ContributionPage/ContributionPage\";\nimport Detail from './pages/Detail/Detail';\nimport Success from './pages/Success/Success';\nimport OrderHistory from './pages/OrderHistory/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/user/:userId\" component={UserDashboard} />\n              <Route exact path=\"/contributionPage\" component={ContributionPage} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/contributions/:id\" component={Detail} />\n              <Route exact path=\"/profile/:profileId\" component={UserProfile} />\n              <Route exact path=\"/content/:contentId\" component={ContentPage} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>{\" \"}\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}